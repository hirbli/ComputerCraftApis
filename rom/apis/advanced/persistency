-- Persistency

-- Purpose:
--   store and read structured data from file to survive shutdowns

local ser = loader.require.serializer
local object = loader.require.object

local class, vtable = object:createSubclass("persistency")
loader.installAsApi(class)

function vtable:load()
  local file = io.open(self.path, "r")
  if not file then return false end
  local str = file:read()
  file:close()
  self.value = ser.unserialize(str)
  return true
end

function vtable:store()
  local str = ser.serialize(self.value)
  local file = io.open(self.path, "w")
  file:write(str)
  file:close()
end

local path = "persistency/"

function vtable:init(name, initialValue)
  if not fs.exists(path) then fs.makeDir(path) end
  self.value = initialValue
  self.name = name
  self.path = path..name
  self:load()
end

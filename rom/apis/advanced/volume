-- Volume - Table Indexed by Vectors

-- Purpose:
--   Associate coordinates expressed as vectors with values


local table = loader.require.table
local object = loader.require.object
local iterator = loader.require.iterator

local class, inst = object:createSubclass("volume")
loader.installAsApi(class)


local function makeKey(index)
  return index.x.."\t"..index.y.."\t"..index.z
end

local function breakKey(key)
  local f, s, p = string.gmatch(key, "[-0-9]+")
  local x = f(s, p)
  local y, t = f(s, x)
  local z = f(s, y)
  return vector.new(tonumber(x), tonumber(y), tonumber(z))
end


function inst:newindex(index, value)
  self.array[makeKey(index)] = value
end

function inst:index(index)
  return self.array[makeKey(index)]
end

function inst:init()
  self.array = {}
end

local function kvToVector(key, val)
  return breakKey(key), val
end

function inst:__pairs()
  return iterator.select(kvToVector, pairs(self.array))
end


local test = lunit.new(class)

function test.keys()
  local v = vector.new(1, 2, -4)
  local s = makeKey(v)
  lunit.areEqual(v, breakKey(s))
end

function test.setandget()
  local a = class:new()
  for i=-1,2 do
    for j=-2,1 do
      local v = vector.new(i, j, 4)
      a[v] = i*10+j
    end
  end
  for i=-1,2 do
    for j=-2,1 do
      local v = vector.new(i, j, 4)
      lunit.areEqual(i*10+j, a[v])
    end
  end
  lunit.areSame(nil, a[vector.new(100, 0, 0)])
  -- can be replaced by pairs(a) in lua 5.2
  for k, v in pairs(a) do
    lunit.areEqual(k.x*10+k.y, a[k])
  end
end
